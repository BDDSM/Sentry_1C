
Функция СформироватьJSON(Тело)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Тело);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции // СформироватьJSON()

Процедура ВыгрузитьЖурналРегистрацииВSentry() Экспорт
	
	//Устанавливаем параметры подключения	
	ПараметрыПодключения = Новый Соответствие;
	//ПараметрыПодключения.Вставить("User-Agent", "sentry-python/1.0");
	ПараметрыПодключения.Вставить("Content-Type", "application/json");
	ПараметрыПодключения.Вставить("X-Sentry-Auth", "Sentry sentry_version=7,sentry_key=0cded76306854a4fb615685e1dcf9cfa");

	//HTTPСоединение  = Новый HTTPСоединение("sentry.companydomain.ru", , , , , ,Новый ЗащищенноеСоединениеOpenSSL);
	HTTPСоединение  = Новый HTTPСоединение("0cded76306854a4fb615685e1dcf9cfa@o390533.ingest.sentry.io", , , , , ,Новый ЗащищенноеСоединениеOpenSSL);
	HTTPЗапрос      = Новый HTTPЗапрос("/api/5449917/store/", ПараметрыПодключения);
	
	МассивУровнейЖурнала = Новый Массив;
	МассивУровнейЖурнала.Добавить(УровеньЖурналаРегистрации.Ошибка);
	МассивУровнейЖурнала.Добавить(УровеньЖурналаРегистрации.Предупреждение);
	
	Для каждого УровеньЖурнала из МассивУровнейЖурнала Цикл
		ОтборЖурнала = Новый Структура();
		ОтборЖурнала.Вставить("ДатаНачала", ТекущаяДата()-3600);
		ОтборЖурнала.Вставить("Уровень", УровеньЖурнала);
		УровеньЖурналаSentry = ПолучитьУровень(УровеньЖурнала);
		
		СобытияЖурналаТекущийДень = Новый ТаблицаЗначений;
		ВыгрузитьЖурналРегистрации(СобытияЖурналаТекущийДень,ОтборЖурнала,,,);
		СобытияЖурналаТекущийДень.Сортировать("ПредставлениеМетаданных, ПредставлениеСобытия");
		
		Для каждого СтрокаЖурнала из СобытияЖурналаТекущийДень цикл
			
			Тело = СформироватьТелоСообщенияSentry(СтрокаЖурнала, УровеньЖурналаSentry);
			HTTPЗапрос.УстановитьТелоИзСтроки(СформироватьJSON(Тело));
			
			HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);      
			Ответ = HTTPОтвет.ПолучитьТелоКакСтроку();
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьТелоСообщенияSentry(СтрокаЖурнала, УровеньЖурналаSentry)
	
	СистемнаяИнформация = Новый("СистемнаяИнформация");
	//ДатаСобытия = Формат((СтрокаЖурнала.Дата+10800), "ДФ=yyyy-MM-ddTHH:mm:ss");
	TimeStamp = СтрокаЖурнала.Дата - '19700101';
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	МнСтрокаСоединения = СтрЗаменить(СтрокаСоединения, ";", Символы.ПС);
	ИмяБазы = СтрЗаменить(СтрЗаменить(СтрПолучитьСтроку(МнСтрокаСоединения, 2), "Ref=", ""), """", "");
	
	Тело = Новый Структура();
	Тело.Вставить("timestamp", TimeStamp);
	Тело.Вставить("logger", "1C_Sentry_logger");
	Тело.Вставить("platform", "Other"); //нельзя указать 1С, у него только фиксированный список платформ
	Тело.Вставить("level", УровеньЖурналаSentry);
	Тело.Вставить("transaction", СтрокаЖурнала.Транзакция);
	Тело.Вставить("server_name", СтрокаЖурнала.РабочийСервер);
	Тело.Вставить("release", Метаданные.Версия);
	Тело.Вставить("dist", ИмяБазы); //Подставлять имя базы
	Тело.Вставить("environment", Строка(Метаданные.РежимСовместимости));  //Тут важно определять это рабочая база или нет
	Тело.Вставить("message", СтрокаЖурнала.Комментарий);
	
	Тело.Вставить("tags", Новый Соответствие);
	//Тело["tags"].Вставить("ios_version", Метаданные.Версия);
	Тело["tags"].Вставить("context", "production");
	
	Тело.Вставить("extra", Новый Соответствие);
	Тело["extra"].Вставить("some_other_value", "foo bar"); //Можно добавить что-нибудь свое как доп. информацию
	
	//По ключу "exception" идет группировка ошибок
	Тело.Вставить("exception", Новый Соответствие);
	МодульОшибки = "";
	RegExp = Новый COMОбъект("VBScript.RegExp");
	RegExp.Pattern = "{(.*?)\(";  
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	Matches=RegExp.Execute(СтрокаЖурнала.Комментарий);
	ЧислоВхождений=Matches.Count();
	Если ЧислоВхождений>0 Тогда 
		Для Индекс = 0 По ЧислоВхождений-1 Цикл
			МодульОшибки = Matches.Item(Индекс).SubMatches(0);
		КонецЦикла;
	КонецЕсли;
	Если ПустаяСтрока(МодульОшибки) Тогда
		МодульОшибки = СтрокаЖурнала.ПредставлениеМетаданных;
	КонецЕсли;
	
	Тело["exception"].Вставить("values", Новый Массив);
	Тело["exception"]["values"].Добавить(Новый Структура("type, value", СтрокаЖурнала.ПредставлениеСобытия, МодульОшибки));  
	
	Тело.Вставить("contexts", Новый Соответствие);
	Тело["contexts"].Вставить("device", Новый Соответствие);
	Тело["contexts"]["device"].вставить("type", "device");
	Тело["contexts"]["device"].вставить("name", СтрокаЖурнала.Компьютер);
	Тело["contexts"]["device"].вставить("family", "PC");
	
	Тело["contexts"].Вставить("os", Новый Соответствие);
	Тело["contexts"]["os"].вставить("name", "windows"); //Информация о компьютере не вытягивается, но возможно будет
	Тело["contexts"].Вставить("app", Новый Соответствие);
	Тело["contexts"]["app"].вставить("app_name", СтрокаЖурнала.ИмяПриложения);
	Тело["contexts"]["app"].вставить("build_type", СтрокаЖурнала.ПредставлениеПриложения);
	Тело["contexts"]["app"].вставить("app_version", СистемнаяИнформация.ВерсияПриложения);
	//Тело["contexts"]["app"].вставить("app_identifier", "");
	//Тело["contexts"]["app"].вставить("app_start_time", "");
	//Тело["contexts"]["app"].вставить("app_build", "");
	Тело["contexts"].Вставить("session_data", Новый Соответствие);
	Тело["contexts"]["session_data"].вставить("session", СтрокаЖурнала.сеанс);
	Тело["contexts"]["session_data"].вставить("connection", СтрокаЖурнала.соединение);
	
	Data = Новый Структура;
	Data.Вставить("metadata", СтрокаЖурнала.ПредставлениеМетаданных);
	Data.Вставить("record", СтрокаЖурнала.ПредставлениеДанных);
	//Data.Вставить("module", МодульОшибки);
	
	Тело.Вставить("breadcrumbs", Новый Соответствие);
	Тело["breadcrumbs"].Вставить("values", Новый Массив);
	
	Тело["breadcrumbs"]["values"].Добавить(Новый Структура("timestamp, message, category, data", TimeStamp, СтрокаЖурнала.Комментарий, СтрокаЖурнала.ПредставлениеСобытия, Data));  
	
	Тело.Вставить("user", Новый Соответствие);
	Тело["user"].Вставить("id", СтрокаЖурнала.ИмяПользователя);
	Тело["user"].Вставить("username", СтрокаЖурнала.ИмяПользователя);
	//Тело["user"].Вставить("ip_address", СтрокаЖурнала.Компьютер);
	
	Возврат тело;
	
КонецФункции

Функция ПолучитьУровень(УровеньЖР)
	
	СоответствииУровней = Новый Соответствие;
	СоответствииУровней.Вставить(УровеньЖурналаРегистрации.Ошибка, "error");
	СоответствииУровней.Вставить(УровеньЖурналаРегистрации.Предупреждение, "warning");
	
	Уровень = СоответствииУровней.Получить(УровеньЖР);
	
	Возврат Уровень;
	
КонецФункции
